# -*- coding: utf-8 -*-
"""Quantitative_Momentum_Investing_Strategy

Automatically generated by Colaboratory.
"""

!pip install -U pandas_datareader

import pandas_datareader as web
import pandas as pd
import numpy as np
import math
from scipy import stats

from google.colab import files
loaded_file = files.upload()

stocks = pd.read_csv('sp_500_stocks.csv')

stocks.head()

columns=['ticker','price','market cap','stats','shares2buy']

df = pd.DataFrame(columns=columns)

for stock in stocks['Ticker']:
  try:
    data = web.data.get_quote_yahoo(stock)
    df = df.append(
      pd.Series([
          stock,
          np.double(data['price']),
          np.int64(data['marketCap'])[0],
          np.double(data['fiftyTwoWeekLowChangePercent']),
          'N/A'
        ],
        index = columns
      ),
      ignore_index=True
    )
  except:
    pass

df

df.sort_values('stats', ascending=False, inplace=True)
df = df[:50]

df.reset_index(drop=True, inplace=True)

df

portfolio_size = float(input('Enter the valueof your portfolio: '))

position_size = portfolio_size / len(df.index)

for i in range(len(df.index)):
  df.loc[i,'shares2buy'] = math.floor(position_size/df.loc[i,'price'])

df

hqm_cols = [
  'ticker',
  'price',
  'shares2buy',
  'fiftyDayAverageChange',
  'fiftyDayAverageChangePercent',
  'twoHundredDayAverageChange',
  'twoHundredDayAverageChangePercent',
  'fiftyTwoWeekLowChange',
  'fiftyTwoWeekLowChangePercent',
  'score',
]

df = pd.DataFrame(columns=hqm_cols)

for stock in stocks['Ticker']:
  try:
    data = web.data.get_quote_yahoo(stock)
    df = df.append(
      pd.Series([
          stock,
          np.double(data['price']),
          'N/A',
          np.double(data['fiftyDayAverageChange']),
          np.double(data['fiftyDayAverageChangePercent']),
          np.double(data['twoHundredDayAverageChange']),
          np.double(data['twoHundredDayAverageChangePercent']),
          np.double(data['fiftyTwoWeekLowChange']),
          np.double(data['fiftyTwoWeekLowChangePercent']),
          'N/A',
        ],
        index = hqm_cols
      ),
      ignore_index=True
    )
  except:
    pass

df

time_periods = ['fiftyTwoWeekLow',
                'twoHundredDayAverage',
                'fiftyDayAverage']

for row in df.index:
  for period in time_periods:
    df.loc[row, f'{period}ChangePercent'] = \
      stats.percentileofscore(
        df[f'{period}Change'],
        df.loc[row, f'{period}ChangePercent'])

df

from statistics import mean

for row in df.index:
  momentum_percent = []
  for period in time_periods:
    momentum_percent.append(df.loc[row,f'{period}ChangePercent'])
  df.loc[row, 'score'] = mean(momentum_percent)

df

df.sort_values('score', ascending=False, inplace=True)
df = df[:50]
df.reset_index(drop=True, inplace=True)

df

portfolio_size = float(input('Enter the valueof your portfolio: '))

position_size = portfolio_size / len(df.index)

for i in range(len(df.index)):
  df.loc[i,'shares2buy'] = math.floor(position_size/df.loc[i,'price'])

df
